---
import Layout from '../../layouts/Layout.astro';
import FormularioDivisionDeGastos from "../../components/formularioDivisionDeGastos"
---

<Layout title="New Group">
  <main>

    <div class="form-group flex-row">
        <div class="form-group-item item-nombre-grupo">
            <label for="nombreGrupo">Nombre del grupo:</label>
            <input type="text" id="nombreGrupo" name="nombreGrupo" class="input-field">
        </div>
        <div class="form-group-item">
            <p>Visibilidad Publica</p>
            <div class="checkbox-wrapper-7">
                <input class="tgl tgl-ios" id="grupoPublico" type="checkbox"/>
                <label class="tgl-btn" for="grupoPublico">
            </div>
        </div>
    </div>

    <FormularioDivisionDeGastos client:only></FormularioDivisionDeGastos>

    <script>
        import { contactos } from '../../../public/contactos.astro';
        import { usuarios } from "../../../public/usuarios.astro";
        import { getHives, getUserByUsername, getUsuarios, getGrupos, getCurrentUser } from "../../utils/utilities"

        var currentUser = getCurrentUser();
        var campoIntegrante1 = document.createElement('div');
        campoIntegrante1.innerHTML = `<input type="text" id="nombreIntegrante1" name="nombreIntegrante1" value=${getUsuarios()[currentUser].nombre} class="input-field" disabled>`
        document.getElementById('containerIntegrante1').appendChild(campoIntegrante1)
        
        var grupos = getGrupos();
        var hive_userActual = getHives();

        var userContacts = contactos[currentUser] || [];
        var userContactsNames = userContacts.map(id => usuarios[id]?.nombre || `Usuario ${id}`);
        var integrantesContainer = document.getElementById('integrantesContainer');

        document.getElementById('agregarIntegranteBtn').addEventListener('click', function() {
            var contadorIntegrantes = integrantesContainer.children.length + 2;
            var nuevoCampoIntegrante = document.createElement('div');
            var contactosDisponibles = userContactsNames.filter(name => {
                // Comprobar si el contacto ya ha sido seleccionado
                return ![...integrantesContainer.querySelectorAll('select')].some(select => select.value === name);
            });

            nuevoCampoIntegrante.innerHTML = `
            <select id="nombreIntegrante${contadorIntegrantes}" name="nombreIntegrante${contadorIntegrantes}" class="custom-select">
                <option value="">Selecciona un integrante</option>
                ${contactosDisponibles.map(name => `<option value="${name}">${name}</option>`).join('')}
            </select>`;
            integrantesContainer.appendChild(nuevoCampoIntegrante);
        });

        document.getElementById('executeSearch').addEventListener('click', function() {
            const username = document.getElementById('searchUsername').value;
            const user = getUserByUsername(username);
            console.log("User: ", user);
            if (user) {
                var contadorIntegrantes = integrantesContainer.children.length + 2;
                var nuevoCampoIntegrante = document.createElement('div');
                nuevoCampoIntegrante.innerHTML = `
                    <select disabled id="nombreIntegrante${contadorIntegrantes}" name="nombreIntegrante${contadorIntegrantes}" class="custom-select added-user">
                        <option selected value="${user.usuario}">${user.usuario}</option>
                    </select>`;
                integrantesContainer.appendChild(nuevoCampoIntegrante);
                document.getElementById('searchUsername').value = "";
            } else {
                alert('El usuario no existe');
            }
        });

        var esPublico = false;
        const grupoPublico = document.getElementById('grupoPublico');
        grupoPublico.addEventListener('change', function() {
            if (grupoPublico.checked) {
                esPublico = true;
            } else {
                esPublico = false;
            }
        });

        var userContactsMap = {};
        userContacts.forEach(id => {
            var nombre = usuarios[id]?.nombre || `Usuario ${id}`;
            userContactsMap[nombre] = id;
        });

        document.getElementById('crearGrupoFormulario').addEventListener('submit', function(event) {
            event.preventDefault(); 
            hive_userActual = getHives()
            var nombreGrupo = document.getElementById('nombreGrupo').value;
            var integrantes = [];
            integrantes.push(currentUser)
            var maximo = 0;
            for (const key in grupos){
                if (grupos.hasOwnProperty(key)){
                    if (Number(key) > Number(maximo)){
                        maximo = Number(key);
                    }
                }
            }
            
            hive_userActual[currentUser].push(maximo+1)
            for (var i = 2; i <= integrantesContainer.children.length + 1; i++) {
                var nombreIntegrante = document.getElementById(`nombreIntegrante${i}`).value;
                var id_integrante = userContactsMap[nombreIntegrante]; 
                if (id_integrante != null) {
                    integrantes.push(Number(id_integrante));
                    hive_userActual[id_integrante].push(maximo+1);
                } 
                // Agrego no contacto al grupo
                else {
                    let user = getUserByUsername(nombreIntegrante);
                    integrantes.push(Number(user.id));
                    hive_userActual[user.id].push(maximo+1);
                }
            }

            var nuevoGrupo = { 
                nombre: nombreGrupo, 
                integrantes: integrantes, 
                tipo: "gastos", 
                gastos: [],
                publico: esPublico
            };

            grupos[maximo+1] = nuevoGrupo;
            sessionStorage.setItem('grupos', JSON.stringify(grupos));

            sessionStorage.setItem("hives", JSON.stringify(hive_userActual));


            function actualizarListaGrupos() {
                hive_userActual = getHives()
                var contenedorGrupos = document.getElementById('grupos');
                contenedorGrupos.innerHTML = ''; 

                hive_userActual[currentUser].forEach(i => {
                    var grupo = grupos[i];
                    console.log(grupo)
                    var grupoElemento = document.createElement('div');

                    var cantidadIntegrantes = grupo.integrantes.length;
                    grupoElemento.innerHTML = '<h2>' + grupo.nombre + '</h2><p>Cantidad de integrantes: ' + cantidadIntegrantes + '</p>';

                    var enlaceDetalle = document.createElement('a');
                    enlaceDetalle.classList.add('grupo-card');
                    enlaceDetalle.href = 'grupos/' + (i);
                    
                    enlaceDetalle.appendChild(grupoElemento);
                    contenedorGrupos.appendChild(enlaceDetalle);
                });
            }

            window.location.href = '/home';

            actualizarListaGrupos();

            document.getElementById('crearGrupoFormulario').reset();
            document.getElementById('integrantesContainer').innerHTML = '';
        });
            

        document.getElementById('cerrarFormBtn').addEventListener('click', function() {
            window.location.href = '/home'; // Redirigir al usuario a la p√°gina de inicio
        });

    </script>

  </main>
</Layout>