---
import Layout from '../layouts/Layout.astro';
import { Button } from "@nextui-org/react";

---

<Layout title="Welcome to Splithive">
    <main>
        <div class="header">
            <img src='/public/splithive.png' alt="Bees" class="img-logo" />
        </div>
        <h1 class="page-title">Lista de Grupos</h1>

        <div id="grupos"></div>

        <button id="crearGrupoBtn">Crear grupo</button>
        <button id="beesBtn">Bees</button>

        <div id="modal" class="modal" style="display: none;">
            <div class="modal-content">
                <span class="close" id="closeModal">&times;</span>
                <h2>Crear Nuevo Grupo</h2>
                <form id="crearGrupoFormulario">
                    <label for="nombreGrupo">Nombre del grupo:</label>
                    <input type="text" id="nombreGrupo" name="nombreGrupo"><br><br>
                    
                    <label for="nombreIntegrante1">Nombre del integrante 1:</label>
                    <input type="text" id="nombreIntegrante1" name="nombreIntegrante1" value="Cami" disabled><br><br>

                    <div id="integrantesContainer"></div>

                    <button type="button" id="agregarIntegranteBtn">+</button><br><br>

                    <div style="margin-top: 10px;">
                        <button style="background-color: lightblue; border: 3px; border-color: black; border-radius: 5px; padding: 3px; color: black;" type="submit">Crear</button>
                        <button style="background-color: lightgrey; border: 3px; border-color: black; border-radius: 5px; padding: 3px; color: black;" id="cerrarFormBtn" type="button">Cancelar</button>
                    </div>
                </form>
            </div>
        </div>

        <script>
            import { hives } from "../../public/hives.astro";
            import { usuarios } from "../../public/usuarios.astro";
            import cargarDatos from "../utils/initLogica";
            import { getContactos, getUsuarios, getGrupos, getGastos, getHives, getCurrentUser } from "../utils/utilities"
            import { contactos } from '../../public/contactos.astro';

            var currentDate = new Date();
            var currentUser = 6; 
            sessionStorage.setItem("userID",JSON.stringify(currentUser));
            // Getting the current date components
            var year = currentDate.getFullYear();
            var month = currentDate.getMonth() + 1; // Months are zero-based, so January is 0
            var day = currentDate.getDate();
            var fechaActual =(day < 10 ? "0" + day : day) + "-"+(month < 10 ? "0" + month : month) + "-" + year;
            cargarDatos();
            /*if (!sessionStorage.getItem('grupos')) {
                var grupos = [
                    { nombre: 'grupo1', integrantes: [{ nombre: 'Camila',userID:6 }, { nombre: 'Mateo', userID: 7}, { nombre: 'Ignacio', userID:4 }, { nombre: 'Juan', userID:0 }, { nombre: 'Manu' ,userID:5}, { nombre: 'Tomas', userID:3 }], gastos: [ { nombre: "boleta de luz", payer:"Tomas",fecha:fechaActual,montoTotal:120,deuda: 40, deudores: ["Tomas", "Manu", "Juan"] } ] },
                    { nombre: 'grupo2', integrantes: [{ nombre: 'Camila', userID:6 }, { nombre: 'Raul', userID:8 }, { nombre: 'Maria', userID:1 }], gastos: [ { nombre: "supermercado", payer:"Camila",fecha:fechaActual,montoTotal:200,deuda: 100, deudores: ["Camila", "Maria"] }, { nombre: "colegio", payer:"Raul", fecha:fechaActual,montoTotal: 80,deuda: 80, deudores: ["Raul"] } ] }
                ];
                sessionStorage.setItem('grupos', JSON.stringify(grupos));
            } else {
                var grupos = JSON.parse(sessionStorage.getItem('grupos'))
            }*/
            var grupos = getGrupos();
            var hive_userActual = getHives();
            console.log(hive_userActual[currentUser])
            function actualizarListaGrupos() {
                hive_userActual = getHives()
                var contenedorGrupos = document.getElementById('grupos');
                contenedorGrupos.innerHTML = ''; 

                hive_userActual[currentUser].forEach(i => {
                    var grupo = grupos[i];
                    console.log(grupo)
                    var grupoElemento = document.createElement('div');

                    var cantidadIntegrantes = grupo.integrantes.length;
                    grupoElemento.innerHTML = '<h2>' + grupo.nombre + '</h2><p>Cantidad de integrantes: ' + cantidadIntegrantes + '</p>';

                    var enlaceDetalle = document.createElement('a');
                    enlaceDetalle.classList.add('grupo-card');
                    enlaceDetalle.href = 'grupos/' + (i);
                    
                    enlaceDetalle.appendChild(grupoElemento);
                    contenedorGrupos.appendChild(enlaceDetalle);
                });
            }

            var modal = document.getElementById('modal');
            var btnAbrirModal = document.getElementById('crearGrupoBtn');
            var spanCerrar = document.getElementById('closeModal');

            btnAbrirModal.onclick = function() {
                modal.style.display = 'block';
            };

            spanCerrar.onclick = function() {
                modal.style.display = 'none';
            };

            window.onclick = function(event) {
                if (event.target == modal) {
                    modal.style.display = 'none';
                }
            };

            document.getElementById('crearGrupoBtn').addEventListener('click', function() {
                document.getElementById('crearGrupoForm').style.display = 'block';
            });

            document.getElementById('beesBtn').addEventListener('click', function() {
                window.location.href = 'bees/bees'; 
            });

            document.getElementById('cerrarFormBtn').addEventListener('click', function() {
                document.getElementById('modal').style.display = 'none';
            });
            
            var userContacts = contactos[currentUser] || [];
            var userContactsNames = userContacts.map(id => usuarios[id]?.nombre || `Usuario ${id}`);
            /*var contadorIntegrantes = 1; */
            var integrantesContainer = document.getElementById('integrantesContainer');

            document.getElementById('agregarIntegranteBtn').addEventListener('click', function() {
                /*contadorIntegrantes++; */
                var contadorIntegrantes = integrantesContainer.children.length + 2; // Adjusted to start from 2
                var nuevoCampoIntegrante = document.createElement('div');
                nuevoCampoIntegrante.innerHTML = `
                    <label for="nombreIntegrante${contadorIntegrantes}">Nombre del integrante ${contadorIntegrantes}:</label>
                    <select id="nombreIntegrante${contadorIntegrantes}" name="nombreIntegrante${contadorIntegrantes}">
                    <option value="">Selecciona un integrante</option>
                    ${userContactsNames.map(name => `<option value="${name}">${name}</option>`).join('')}
                    </select><br><br>`;
                integrantesContainer.appendChild(nuevoCampoIntegrante);
            });


            //nuevo
            var userContactsMap = {};
            userContacts.forEach(id => {
                var nombre = usuarios[id]?.nombre || `Usuario ${id}`;
                userContactsMap[nombre] = id;
            });

            document.getElementById('crearGrupoFormulario').addEventListener('submit', function(event) {
                event.preventDefault(); 

                var nombreGrupo = document.getElementById('nombreGrupo').value;
                var integrantes = [];
                integrantes.push(currentUser)
                var maximo = 0;
                for (const key in grupos){
                    if (grupos.hasOwnProperty(key)){
                        if (Number(key) > Number(maximo)){
                            maximo = Number(key);
                        }
                    }
                }
                hives[currentUser].push(maximo+1)
                for (var i = 1; i <= integrantesContainer.children.length + 1; i++) {
                    var nombreIntegrante = document.getElementById(`nombreIntegrante${i}`).value;
                    //var id_integrante;
                    var id_integrante = userContactsMap[nombreIntegrante]; //NUEVO
                    if (id_integrante) {
                        integrantes.push(Number(id_integrante));
                        hives[id_integrante].push(maximo+1);
                    } //TERMINA NUEVO
                    /*
                    for (const key in usuarios){
                        if (usuarios.hasOwnProperty(key)){
                            if (usuarios[key].usuario == nombreIntegrante){
                                integrantes.push(Number(key))
                                hives[key].push(maximo+1)
                            }
                        }
                    }*/
                    //integrantes.push();
                }

                var nuevoGrupo = { nombre: nombreGrupo, integrantes: integrantes, gastos: [] };

                grupos[maximo+1] = nuevoGrupo;
                sessionStorage.setItem('grupos', JSON.stringify(grupos));

                sessionStorage.setItem("hives", JSON.stringify(hives));
                actualizarListaGrupos();

                document.getElementById('modal').style.display = 'none';
                document.getElementById('crearGrupoFormulario').reset();
            });

            actualizarListaGrupos();
        </script>
    </main>
</Layout>

<style is:global>

    body {
        background-image: url('/public/fondo.jpg'); 
        background-size: cover; 
        height: 100vh; 
    }

    #grupos {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }
    .grupo-card {
        background-color: honeydew;
        border-radius: 8px;
        padding: 20px;
        width: calc(33.33% - 20px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s   ease-in-out;
        text-decoration: none;
        color: inherit;
    }
    .grupo-card:hover {
        transform: translateY(-5px);
    }
    .grupo-card h2 {
        margin-top: 0;
        color: black;
    }
    .grupo-card p {
        margin: 0;
        color: grey;
    }

    main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
        color: burlywood;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 10% auto;
        padding: 20px;
        border-radius: 8px;
        width: 80%;
        max-width: 500px;
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover,
    .close:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
    }

    #crearGrupoBtn, #beesBtn {
        background-color: #FFD93D; 
        color: black; 
        font-size: 20px;
        padding: 15px 30px; 
        margin-top: 40px;
    }

    #agregarIntegranteBtn {
        background-color: #F6F1E9;  
        color: black; 
    }

    #crearGrupoFormulario {
        margin-top: 40px;
        color: black;
    }

    label, h2, input {
        color: black;
    }

    input:disabled {
        background-color: transparent;
    }

    input {
        background-color: wheat; 
        border: 3px; border-color: black; 
        border-radius: 5px;
    }
    .img-logo {
        position: absolute;
        top: 0;
        left: 0;
        width: 400px; /* Ajusta el tamaño según tus necesidades */
    }
    .page-title {
        margin-top: 10rem; /* Ajusta el margen superior según tus necesidades */
        text-align: center;
        color: burlywood;
        font-size: 3rem; /* Ajusta el tamaño de la fuente según tus necesidades */
    }
</style>